1. Node.js 설치
2.Express-generator 설치
    장점: 자동으로 프로젝트에 필요한 파일과 구조를 생성해 준다.(라우터 포함)

    npm install -g express-generator

3. 프로젝트 생성
    express testapp

    이후 packet.json 파일에 dependency 모듈을 npm install 명령어로 설치해 준다. 


4. 서버 테스트 
    npm start


5. API 서버 만들기 

    1)
    실질적인 웹 서버 구축에 관한 파일은 bin/www와 app.js가 담당한다.
    app.js 에선, app.use()를 통하여, 각종 미들웨어를 추가하게 된다.

    2)
    현재 프로젝트에선, app.js에 app.use('/', indexRouter); 를 통해, 
    '/' 요청이 왔을 때에는, indexRouter로 가도록 설정이 되어있다. 

    3)
    현재 index.js에선, router.get() 을 통해 '/'로 get방식의 요청이 왔을 때, render함수로 응답을 해주도록 되어있다. 
    그러나, API서버 구축이 목적이므로, res.status().json() 함수를 이용하도록 한다. 

    4) GET API => JSON 데이터를 리턴하는 API 
        router.get('/test', function(req, res) {
        res.status(200).json(
            {
            "message" : "test"
            }
        );
        });

    5) POST API
        router.post('/post_test', function(req, res) {
        const user_message = req.body.message;
        res.status(200).json(
            {
            "message" : user_message
            }
        );
        });

    참고: 기존에는, body-parser 모듈을 통해 req.body 내의 정보를 가져와야 했지만, Express 4.x 버젼 이상부터, body parser가 기본적으로 내장되있어, 설치하지 않아도 가능해졌다.




6. 컨트롤러 
        
    위와 같은 라우터 폴더 내의 index.js에서 모든 API의 정의와 처리를 모두 담당하고 있다. 
    이 구조로 API를 추가하다보면 가독성과 유지보수 측면에서 비효율적일 수 있다. 

    라우서에서는 API의 URL만 정의하도록 하고, 실질적인 요청에 대한 처리는 컨트롤러를 만들어서 처리하도록 구조를 변경해 보자.

    1) 컨트롤러 생성 
        기존 routes/index.js API를 controller/index.js 로 옮긴 후 모듈화 한다. 
        컨트롤러에 옮긴 후 라우터에서 해당 컨트롤러 내의 모듈을 불러오도록 수정한다. 

        용도나 목적에 따라 여러 컨트롤러에 API들을 나눠서 작성하는 것이 가독성, 유지보수 측면에서 좋다

7. cveSearchAPI 추가 
    cvecontrller.js 를 추가한 후에 cve code를 검색하고 결과를 리턴하는 API를 만든다. 
    cvecontrller.js 를 별도로 분리해서 가독성, 유지보수 효율을 높인다. 
    1) Post Body data 
    {
        "search":{
            "type":1,
            "keyword":"CVE-2019-1010298"
        }
    }  

    2) mongodb 연동 
        - mongodb 설치 
            npm install mongodb 
            npm install mongoose














